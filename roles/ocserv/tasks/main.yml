---

- apt: pkg=ocserv state=present

- include: gen_cert.yml cert_dir="{{ ocserv_default_cert_dir }}"
  when: ocserv_cert_source == "gen"

- include: upload_cert.yml cert_dir="{{ ocserv_default_cert_dir }}"
  when: ocserv_cert_source == "local"

- name: create ocserv config file
  template: src=ocserv.conf  dest={{ ocserv_config_dir }}/ocserv.conf
  tags:
    - ocserv
  notify:
    - restart ocserv

- name: Check that the somefile.conf exists
  stat:
    path: /lib/systemd/system/ocserv.socket
  register: socket_file_result

- name: change ocserv port - tcp
  lineinfile: 
    path: /lib/systemd/system/ocserv.socket
    regexp: '^ListenStream='
    line: "ListenStream={{ ocserv_tcp_port }}"
  when: not socket_file_result.stat.exists

- name: change ocserv port - udp
  lineinfile: 
    path: /lib/systemd/system/ocserv.socket
    regexp: '^ListenDatagram='
    line: "ListenDatagram={{ ocserv_udp_port }}"
  when: not socket_file_result.stat.exists

- name: set network in easynat rule file
  action: lineinfile dest=/opt/easynat/rules.cnf regexp="{{ ocserv_network }}/24" line="{{ ocserv_network }}/24" state=present create=yes
  notify: 
    - setup nat rules
  tags: 
    - ocserv
    - nat

- include: radius.yml
  when: ocserv_use_radius

- include: add_user.yml
  when: not ocserv_use_radius

- name: set network in easynat rule file
  action: lineinfile dest=/opt/easynat/rules.cnf regexp="{{ ocserv_network }}/24" line="{{ ocserv_network }}/24" state=present create=yes
  notify: 
    - setup nat rules
  tags: 
    - ocserv
    - nat

- include: radius.yml
  when: ocserv_use_radius

- include: add_user.yml
  when: not ocserv_use_radius
